{"version":3,"sources":["slices/toastSlice.ts","slices/postSlice.ts","slices/profile/profileSlice.ts","slices/auth/loginSlice.ts","slices/auth/registerSlice.ts","store/index.ts","components/Navbar.tsx","components/Layout.tsx","pages/Login.tsx","pages/Register.tsx","components/Profile.tsx","components/ProfileCreate.tsx","pages/Home.tsx","pages/ProfileEdit.tsx","pages/Profiles.tsx","pages/SingleProfile.tsx","pages/CreateEdu.tsx","pages/CreateExp.tsx","components/PostForm.tsx","components/CommentForm.tsx","App.tsx","pages/Dashboard.tsx","index.tsx"],"names":["toastSlice","createSlice","name","initialState","msg","type","reducers","toastSuccess","state","payload","toastError","clearToast","actions","axios","defaults","headers","post","API_ENDPOINT_POST","getPosts","createAsyncThunk","_","a","dispatch","getState","rejectWithValue","userInfo","login","config","Authorization","token","get","data","response","message","createPost","text","deletePost","postId","delete","likePost","put","unlikePost","createComment","deleteComment","commentId","postSlice","postInfo","error","loading","success","clearStateAfterPutOrDeleteForReRendering","extraReducers","builder","addCase","pending","fulfilled","rejected","push","console","log","API_ENDPOINT_PROFILE","profileInfo","profiles","singleProfile","getProfileOfLoggedUser","resetProfileInfo","createProfile","company","website","location","status","skills","bio","githubusername","social","youtube","twitter","facebook","instagram","getProfiles","getProfilesByID","_id","deleteProfile","id","updateEdu","school","degree","fieldofstudy","from","to","current","description","deleteEdu","updateExp","title","deleteExp","profileSlice","initState","email","loginUser","password","localStorage","setItem","JSON","stringify","logoutUser","removeItem","loginSlice","registerUser","registerSlice","userInit","preloadedState","getItem","parse","userInfoFromLocalStorage","store","configureStore","reducer","register","profile","toast","Navbar","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useDispatch","useSelector","length","bgGradient","align","w","base","md","p","mx","cursor","display","ml","colorScheme","variant","as","Button","rightIcon","casing","bg","onClick","color","size","fontSize","aria-label","icon","ref","placement","finalFocusRef","transition","_hover","my","Layout","children","useToast","history","useHistory","duration","isClosable","position","Login","useState","setRegister","showPW","setShowPW","validationSchema","Yup","required","min","formik","useFormik","initialValues","onSubmit","daten","resetForm","useEffect","placeItems","h","mt","boxShadow","borderRadius","bgClip","handleSubmit","isInvalid","errors","touched","placeholder","getFieldProps","width","isLoading","fontStyle","Register","Profile","fontWeight","map","skill","index","education","edu","border","borderColor","top","right","locale","format","experience","exp","ProfileCreate","isDisabled","value","py","px","Home","ProfileEdit","initValues","setInitValues","enableReinitialize","prevValues","Profiles","useMediaQuery","lessThan782","user","mr","MdWork","MdLocationOn","MdPerson","CgWebsite","i","SingleProfile","useParams","CreateEdu","values","CreateExp","PostForm","CommentForm","rows","routes","path","exact","component","private","window","confirm","leftIcon","likes","comments","comment","borderTop","date","PrivateRoute","props","rest","render","App","route","RouteType","Route","rootElement","document","getElementById"],"mappings":"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","file":"static/js/main.e3af5da3.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ninterface IInitState {\r\n  msg: string;\r\n  type: \"success\" | \"error\" | \"default\";\r\n}\r\n\r\nconst initialState: IInitState = {\r\n  msg: \"\",\r\n  type: \"default\"\r\n};\r\n\r\nexport const toastSlice = createSlice({\r\n  name: \"toast\",\r\n  initialState,\r\n  reducers: {\r\n    toastSuccess: (state, { payload }: { payload: string }) => {\r\n      state.msg = payload;\r\n      state.type = \"success\";\r\n    },\r\n    toastError: (state, { payload }: { payload: string }) => {\r\n      state.msg = payload;\r\n      state.type = \"error\";\r\n    },\r\n    clearToast: (state) => {\r\n      state.msg = \"\";\r\n      state.type = \"default\";\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toastSuccess, toastError, clearToast } = toastSlice.actions;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { RootState } from \"../store\";\r\n// toast\r\nimport { toastError, toastSuccess } from \"./toastSlice\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nconst API_ENDPOINT_POST =\r\n  \"https://social-network-mkt.herokuapp.com/api/a1/posts\";\r\n\r\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwM2EwOWM4MGQ0MmVmNDVmMGI0NDNmMiIsImlhdCI6MTYxNDgzNjc3MiwiZXhwIjoxNjE1NDQxNTcyfQ.Hmgcvih_Dth4NMbvDwZOo0bck---fhanTDU5EdvrTp4\r\n// types\r\ninterface IComment {\r\n  user: string;\r\n  text: string;\r\n  name: string;\r\n  date: string;\r\n  _id: string;\r\n}\r\ninterface IPostInfo {\r\n  _id: string;\r\n  text: string;\r\n  user: string;\r\n  name: string;\r\n  likes?: string[];\r\n  comments?: IComment[];\r\n  createdAt: string;\r\n}\r\n\r\ninterface IInitState {\r\n  postInfo?: IPostInfo[] | null;\r\n  error: any;\r\n  loading: boolean;\r\n  post?: IPostInfo | null;\r\n  success: boolean;\r\n}\r\n\r\n// initstate\r\nconst initState: IInitState = {\r\n  postInfo: null,\r\n  error: \"\",\r\n  loading: false,\r\n  post: null,\r\n  success: false\r\n};\r\n\r\n// Async\r\n// Get Posts\r\nexport const getPosts = createAsyncThunk(\r\n  \"post/getPosts\",\r\n  async (_, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.get(`${API_ENDPOINT_POST}`, config);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// GetPost by Id\r\n// create Post\r\nexport const createPost = createAsyncThunk(\r\n  \"post/createPost\",\r\n  async (\r\n    { text }: { text: string },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${API_ENDPOINT_POST}`,\r\n        { text },\r\n        config\r\n      );\r\n      // toast\r\n      dispatch(toastSuccess(\"Post erfolgreich erstellt\"));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// Delete Post\r\nexport const deletePost = createAsyncThunk(\r\n  \"post/deletePost\",\r\n  async (\r\n    { postId }: { postId: string },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.delete(\r\n        `${API_ENDPOINT_POST}/${postId}`,\r\n\r\n        config\r\n      );\r\n      // toast\r\n      dispatch(toastSuccess(\"Post erfolgreich gelöscht\"));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// Like post\r\nexport const likePost = createAsyncThunk(\r\n  \"post/likePost\",\r\n  async (\r\n    { postId }: { postId: string },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `${API_ENDPOINT_POST}/like/${postId}`,\r\n        {},\r\n        config\r\n      );\r\n      // toast\r\n      dispatch(toastSuccess(\"❤️\"));\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// unlike Post\r\nexport const unlikePost = createAsyncThunk(\r\n  \"post/unlikePost\",\r\n  async (\r\n    { postId }: { postId: string },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `${API_ENDPOINT_POST}/unlike/${postId}`,\r\n        {},\r\n        config\r\n      );\r\n      // toast\r\n      dispatch(toastSuccess(\"🥺\"));\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// create Comment\r\nexport const createComment = createAsyncThunk(\r\n  \"post/createComment\",\r\n  async (\r\n    { text, postId }: { text: string; postId: string },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${API_ENDPOINT_POST}/comment/${postId}`,\r\n        { text },\r\n        config\r\n      );\r\n      // toast\r\n      dispatch(toastSuccess(\"Kommentar erfolgreich erstellt\"));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// Delete Post\r\nexport const deleteComment = createAsyncThunk(\r\n  \"post/deleteComment\",\r\n  async (\r\n    { postId, commentId }: { postId: string; commentId: string },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.delete(\r\n        `${API_ENDPOINT_POST}/comment/${postId}/${commentId}`,\r\n\r\n        config\r\n      );\r\n      // toast\r\n      dispatch(toastSuccess(\"Kommentar erfolgreich gelöscht\"));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\n// CreateSlice\r\nexport const postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState: initState,\r\n  reducers: {\r\n    clearStateAfterPutOrDeleteForReRendering: (state) => {\r\n      state.success = false;\r\n      return state;\r\n    }\r\n  },\r\n  extraReducers:\r\n    // builder\r\n    (builder) => {\r\n      // ==========================GET POSTS==============================\r\n      builder.addCase(getPosts.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(getPosts.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.postInfo = payload;\r\n      });\r\n      builder.addCase(getPosts.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n      // ==========================CREATE POST==============================\r\n      builder.addCase(createPost.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(createPost.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.postInfo?.push(payload);\r\n        state.success = true;\r\n      });\r\n      builder.addCase(createPost.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n      // ==========================Delete POST==============================\r\n      builder.addCase(deletePost.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(deletePost.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.success = true;\r\n      });\r\n      builder.addCase(deletePost.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n      // ==========================LIKE POST==============================\r\n      builder.addCase(likePost.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(likePost.fulfilled, (state, { payload }) => {\r\n        // console.log(payload);\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.success = true;\r\n        // state.postInfo = payload;\r\n      });\r\n      builder.addCase(likePost.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n      // ==========================UNLIKE POST==============================\r\n      builder.addCase(unlikePost.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(unlikePost.fulfilled, (state, { payload }) => {\r\n        // console.log(payload);\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.success = true;\r\n        // state.postInfo = payload;\r\n      });\r\n      builder.addCase(unlikePost.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n      // ==========================CREATE COMMENT==============================\r\n      builder.addCase(createComment.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(createComment.fulfilled, (state, { payload }) => {\r\n        console.log(payload);\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.success = true;\r\n      });\r\n      builder.addCase(createComment.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n      // ==========================Delete COMMENT==============================\r\n      builder.addCase(deleteComment.pending, (state) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(deleteComment.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.error = \"\";\r\n        state.success = true;\r\n      });\r\n      builder.addCase(deleteComment.rejected, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.error = payload;\r\n      });\r\n    }\r\n});\r\n\r\nexport const { clearStateAfterPutOrDeleteForReRendering } = postSlice.actions;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\nimport axios from \"axios\";\r\n// toast\r\nimport { toastError, toastSuccess } from \"../toastSlice\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nconst API_ENDPOINT_PROFILE =\r\n  \"https://social-network-mkt.herokuapp.com/api/a1/profiles\";\r\n\r\n// types\r\nexport interface IProfileInfo {\r\n  social: {\r\n    youtube?: string;\r\n    twitter?: string;\r\n    instagram?: string;\r\n    facebook?: string;\r\n  };\r\n  skills?: string[];\r\n  _id: string;\r\n  user: {\r\n    name: string;\r\n    _id: string;\r\n  };\r\n  bio: string;\r\n  company: string;\r\n  createdAt: string;\r\n  githubusername: string;\r\n  location: string;\r\n  status:\r\n    | \"status\"\r\n    | \"senior\"\r\n    | \"junior\"\r\n    | \"ceo\"\r\n    | \"cto\"\r\n    | \"praktikant\"\r\n    | \"anderes\";\r\n  website: string;\r\n  experience?: any[];\r\n  education?: any[];\r\n}\r\ninterface IInitState {\r\n  profileInfo?: IProfileInfo | null;\r\n  error: any;\r\n  loading: boolean;\r\n  profiles?: IProfileInfo[] | null;\r\n  singleProfile?: IProfileInfo | null;\r\n}\r\n// initState\r\nconst initialState: IInitState = {\r\n  profileInfo: null,\r\n  error: \"\",\r\n  loading: false,\r\n  profiles: null,\r\n  singleProfile: null\r\n};\r\n\r\n// Async\r\n// Get profile of logged user\r\nexport const getProfileOfLoggedUser = createAsyncThunk(\r\n  \"profile/getProfile\",\r\n  async (_, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.get(`${API_ENDPOINT_PROFILE}/me`, config);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// reset Profileinfo\r\nexport const resetProfileInfo = createAsyncThunk(\r\n  \"profile/resetProfileInfo\",\r\n  async (_, { dispatch }) => {\r\n    return initialState;\r\n  }\r\n);\r\n// create Profile\r\nexport const createProfile = createAsyncThunk(\r\n  \"profile/createProfile\",\r\n  async (\r\n    {\r\n      company,\r\n      website,\r\n      location,\r\n      status,\r\n      skills,\r\n      bio,\r\n      githubusername,\r\n      social: { youtube, twitter, facebook, instagram }\r\n    }: {\r\n      company: string;\r\n      website: string;\r\n      location: string;\r\n      status: string;\r\n      skills: any;\r\n      bio: string;\r\n      githubusername: string;\r\n      social: {\r\n        youtube: string;\r\n        twitter: string;\r\n        facebook: string;\r\n        instagram: string;\r\n      };\r\n    },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_ENDPOINT_PROFILE}`,\r\n        {\r\n          company,\r\n          website,\r\n          location,\r\n          status,\r\n          skills,\r\n          bio,\r\n          githubusername,\r\n          social: { youtube, twitter, facebook, instagram }\r\n        },\r\n        config\r\n      );\r\n      // console.log(data);\r\n      // toast\r\n      dispatch(toastSuccess(\"Profil erfolgreich erstellt\"));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get profiles\r\nexport const getProfiles = createAsyncThunk(\r\n  \"profile/getProfiles\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(`${API_ENDPOINT_PROFILE}`);\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// Get profiles by ID\r\nexport const getProfilesByID = createAsyncThunk(\r\n  \"profile/getProfilesById\",\r\n  async ({ _id }: { _id: string }, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(`${API_ENDPOINT_PROFILE}/${_id}`);\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\n// delete profile by ID\r\nexport const deleteProfile = createAsyncThunk(\r\n  \"profile/deleteProfile\",\r\n  async ({ id }: { id: string }, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.delete(\r\n        `${API_ENDPOINT_PROFILE}/${id}`,\r\n        config\r\n      );\r\n      console.log(data);\r\n      dispatch(toastSuccess(\"Profil wurde gelöscht :(\"));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\n// update Edu\r\nexport const updateEdu = createAsyncThunk(\r\n  \"profile/updateEdu\",\r\n  async (\r\n    {\r\n      school,\r\n      degree,\r\n      fieldofstudy,\r\n      from,\r\n      to,\r\n      current,\r\n      description\r\n    }: {\r\n      school: string;\r\n      degree: string;\r\n      fieldofstudy: string;\r\n      from: string;\r\n      to: string;\r\n      current: boolean;\r\n      description: string;\r\n    },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.put(\r\n        `${API_ENDPOINT_PROFILE}/edu`,\r\n        {\r\n          school,\r\n          degree,\r\n          fieldofstudy,\r\n          from,\r\n          to,\r\n          current,\r\n          description\r\n        },\r\n        config\r\n      );\r\n      // console.log(data);\r\n      dispatch(toastSuccess(\"Bildung wurde erstellt\"));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// delete edu\r\nexport const deleteEdu = createAsyncThunk(\r\n  \"profile/delete\",\r\n  async ({ id }: { id: string }, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.delete(\r\n        `${API_ENDPOINT_PROFILE}/edu/${id}`,\r\n        config\r\n      );\r\n      console.log(data);\r\n      dispatch(toastSuccess(\"Bildung wurde gelöscht\"));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// ==================================================================================\r\n// =======================================EXP========================================\r\n// ==================================================================================\r\n\r\n// update Edu\r\nexport const updateExp = createAsyncThunk(\r\n  \"profile/updateExp\",\r\n  async (\r\n    {\r\n      title,\r\n      company,\r\n      location,\r\n      from,\r\n      to,\r\n      current,\r\n      description\r\n    }: {\r\n      title: string;\r\n      company: string;\r\n      location: string;\r\n      from: string;\r\n      to: string;\r\n      current: boolean;\r\n      description: string;\r\n    },\r\n    { dispatch, getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.put(\r\n        `${API_ENDPOINT_PROFILE}/exp`,\r\n        {\r\n          title,\r\n          company,\r\n          location,\r\n          from,\r\n          to,\r\n          current,\r\n          description\r\n        },\r\n        config\r\n      );\r\n      // console.log(data);\r\n      dispatch(toastSuccess(\"Exp wurde erstellt\"));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// delete edu\r\nexport const deleteExp = createAsyncThunk(\r\n  \"profile/deleteExp\",\r\n  async ({ id }: { id: string }, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      // get userInfo\r\n      const {\r\n        login: { userInfo }\r\n      } = getState() as RootState;\r\n      // Bearer Token\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      };\r\n      const { data } = await axios.delete(\r\n        `${API_ENDPOINT_PROFILE}/exp/${id}`,\r\n        config\r\n      );\r\n      console.log(data);\r\n      dispatch(toastSuccess(\"Exp wurde gelöscht\"));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\n// CreateSlice\r\nexport const profileSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getProfileOfLoggedUser.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getProfileOfLoggedUser.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profileInfo = payload;\r\n    });\r\n    builder.addCase(getProfileOfLoggedUser.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ======================Reset ProfileInfo======================\r\n\r\n    builder.addCase(resetProfileInfo.fulfilled, (state) => {\r\n      return initialState;\r\n    });\r\n    // ====================== Profilecreation======================\r\n    builder.addCase(createProfile.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(createProfile.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profileInfo = payload;\r\n    });\r\n    builder.addCase(createProfile.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ========================GET PROFILES===========================\r\n    builder.addCase(getProfiles.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getProfiles.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profiles = payload;\r\n    });\r\n    builder.addCase(getProfiles.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ========================GET PROFILES BY ID===========================\r\n    builder.addCase(getProfilesByID.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getProfilesByID.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.singleProfile = payload;\r\n    });\r\n    builder.addCase(getProfilesByID.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ========================Delete PROFILES BY ID===========================\r\n    builder.addCase(deleteProfile.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(deleteProfile.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n    });\r\n    builder.addCase(deleteProfile.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ====================== update profile======================\r\n    builder.addCase(updateEdu.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(updateEdu.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profileInfo = payload;\r\n    });\r\n    builder.addCase(updateEdu.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ====================== delete edu======================\r\n    builder.addCase(deleteEdu.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(deleteEdu.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profileInfo = payload;\r\n    });\r\n    builder.addCase(deleteEdu.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ====================== update exp======================\r\n    builder.addCase(updateExp.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(updateExp.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profileInfo = payload;\r\n    });\r\n    builder.addCase(updateExp.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ====================== delete exp======================\r\n    builder.addCase(deleteExp.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(deleteExp.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.profileInfo = payload;\r\n    });\r\n    builder.addCase(deleteExp.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n  }\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n// toast\r\nimport { toastError, toastSuccess } from \"../toastSlice\";\r\n// profile\r\nimport { resetProfileInfo } from \"../profile/profileSlice\";\r\n\r\nconst API_ENDPOINT_USER =\r\n  \"https://social-network-mkt.herokuapp.com/api/a1/users\";\r\n// axios default\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n// types\r\ninterface IUserInfo {\r\n  name: string;\r\n  email: string;\r\n  _id: string;\r\n  token: string;\r\n}\r\ninterface IInitState {\r\n  userInfo: IUserInfo;\r\n  error: any;\r\n  loading: boolean;\r\n}\r\n// initState\r\nconst initState: IInitState = {\r\n  userInfo: {\r\n    name: \"\",\r\n    email: \"\",\r\n    _id: \"\",\r\n    token: \"\"\r\n  },\r\n  error: \"\",\r\n  loading: false\r\n};\r\n\r\n// Async\r\n// Login\r\nexport const loginUser = createAsyncThunk(\r\n  \"login/login\",\r\n  async (\r\n    { email, password }: { email: string; password: string },\r\n    { dispatch, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_ENDPOINT_USER}/login`, {\r\n        email,\r\n        password\r\n      });\r\n      // toast\r\n      dispatch(toastSuccess(\"Erfolgreich eingeloggt\"));\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n// Logout\r\nexport const logoutUser = createAsyncThunk(\r\n  \"login/logout\",\r\n  async (_, { dispatch }) => {\r\n    dispatch(toastSuccess(\"Erfolgreich ausgeloggt, Bis bald :D\"));\r\n    dispatch(resetProfileInfo());\r\n    localStorage.removeItem(\"userInfo\");\r\n    return initState;\r\n  }\r\n);\r\n\r\n// CreateSlice\r\nexport const loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState: initState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loginUser.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(loginUser.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.userInfo = payload;\r\n    });\r\n    builder.addCase(loginUser.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    // ======================LOGOUT======================\r\n\r\n    builder.addCase(logoutUser.fulfilled, (state) => {\r\n      return initState;\r\n    });\r\n  }\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n// toast\r\nimport { toastError } from \"../toastSlice\";\r\nimport { loginUser } from \"./loginSlice\";\r\n\r\nconst API_ENDPOINT_USER =\r\n  \"https://social-network-mkt.herokuapp.com/api/a1/users\";\r\n// axios default\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n// types\r\ninterface IUserInfo {\r\n  name: string;\r\n  email: string;\r\n  _id: string;\r\n  token: string;\r\n}\r\ninterface IInitState {\r\n  userInfo: IUserInfo;\r\n  error: any | string;\r\n  loading: boolean;\r\n}\r\n\r\n// Async\r\n// Login\r\nexport const registerUser = createAsyncThunk(\r\n  \"register/register\",\r\n  async (\r\n    {\r\n      email,\r\n      password,\r\n      name\r\n    }: { name: string; email: string; password: string },\r\n    { dispatch, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_ENDPOINT_USER}/register`, {\r\n        email,\r\n        password,\r\n        name\r\n      });\r\n      // toast\r\n      // dispatch(toastSuccess(\"Erfolgreich angemeldet\"));\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      dispatch(loginUser({ email, password }));\r\n      return data;\r\n    } catch (error) {\r\n      // toast\r\n      dispatch(toastError(error.response.data.message));\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\n// initState\r\nconst initState: IInitState = {\r\n  userInfo: {\r\n    name: \"\",\r\n    email: \"\",\r\n    _id: \"\",\r\n    token: \"\"\r\n  },\r\n  error: \"\",\r\n  loading: false\r\n};\r\n\r\n// CreateSlice\r\nexport const registerSlice = createSlice({\r\n  name: \"register\",\r\n  initialState: initState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(registerUser.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(registerUser.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.userInfo = payload;\r\n    });\r\n    builder.addCase(registerUser.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n  }\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { postSlice } from \"../slices/postSlice\";\r\nimport { profileSlice } from \"../slices/profile/profileSlice\";\r\nimport { loginSlice } from \"../slices/auth/loginSlice\";\r\nimport { registerSlice } from \"../slices/auth/registerSlice\";\r\n// Toast\r\nimport { toastSlice } from \"../slices/toastSlice\";\r\n\r\ninterface IUserInit {\r\n  name: string;\r\n  email: string;\r\n  token: string;\r\n  _id: string;\r\n}\r\n\r\nconst userInit: IUserInit = {\r\n  name: \"\",\r\n  email: \"\",\r\n  token: \"\",\r\n  _id: \"\"\r\n};\r\n\r\n// initState from localStorage\r\nconst userInfoFromLocalStorage = () => {\r\n  const userInfo = localStorage.getItem(\"userInfo\");\r\n  if (userInfo) {\r\n    return JSON.parse(userInfo);\r\n  } else {\r\n    return userInit;\r\n  }\r\n};\r\n\r\n// types\r\ninterface IPreloadedState {\r\n  login: {\r\n    userInfo: IUserInit;\r\n  };\r\n}\r\n\r\nconst preloadedState: IPreloadedState = {\r\n  login: {\r\n    userInfo: userInfoFromLocalStorage()\r\n  }\r\n};\r\n\r\n// store\r\nexport const store = configureStore({\r\n  reducer: {\r\n    login: loginSlice.reducer,\r\n    register: registerSlice.reducer,\r\n    profile: profileSlice.reducer,\r\n    post: postSlice.reducer,\r\n    toast: toastSlice.reducer\r\n  },\r\n  preloadedState\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Avatar,\r\n  Flex,\r\n  Spacer,\r\n  Menu,\r\n  MenuButton,\r\n  Button,\r\n  MenuList,\r\n  MenuItem,\r\n  IconButton,\r\n  useDisclosure,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// icons\r\nimport { FiChevronDown } from \"react-icons/fi\";\r\nimport { GoThreeBars } from \"react-icons/go\";\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n// Redux action\r\nimport { logoutUser } from \"../slices/auth/loginSlice\";\r\n\r\nconst Navbar = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = React.useRef<any>();\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state: RootState) => state.login);\r\n  if (userInfo._id.length === 0) {\r\n    return (\r\n      <Box bgGradient=\"linear(to-r,red.300,purple.300)\">\r\n        <Flex align=\"center\" w={{ base: \"90%\", md: \"100%\" }}>\r\n          <Flex align=\"center\" p={4} w={{ base: \"90%\", md: \"75%\" }} mx=\"auto\">\r\n            <Heading>SNS</Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box bgGradient=\"linear(to-r,red.300,purple.300)\">\r\n      <Flex align=\"center\" w={{ base: \"90%\", md: \"100%\" }}>\r\n        <Flex align=\"center\" p={4} w={{ base: \"90%\", md: \"75%\" }} mx=\"auto\">\r\n          <Heading cursor=\"pointer\">\r\n            <Link to=\"/dashboard\">SNS</Link>\r\n          </Heading>\r\n          <Spacer />\r\n          <Flex align=\"center\" display={{ base: \"none\", md: \"flex\" }}>\r\n            <Avatar name={userInfo.name}></Avatar>\r\n            <Box ml={4}>\r\n              <Menu>\r\n                <MenuButton\r\n                  colorScheme=\"transparent\"\r\n                  variant=\"ghost\"\r\n                  as={Button}\r\n                  rightIcon={<FiChevronDown />}\r\n                >\r\n                  <Text casing=\"capitalize\">Hi {userInfo.name}</Text>\r\n                </MenuButton>\r\n                <MenuList colorScheme=\"red\" bg=\"red.100\">\r\n                  <MenuItem>\r\n                    <Link to=\"/home\">Dein Profil</Link>\r\n                  </MenuItem>\r\n                  <MenuItem>\r\n                    <Link to=\"/profiles\">Andere Profile</Link>\r\n                  </MenuItem>\r\n                  <MenuItem>\r\n                    <Link to=\"/dashboard\">Dashboard</Link>\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => dispatch(logoutUser())}>\r\n                    Logout\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </Menu>\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n        <Box display={{ base: \"block\", md: \"none\" }}>\r\n          <IconButton\r\n            colorScheme=\"transparent\"\r\n            color=\"red.700\"\r\n            size=\"lg\"\r\n            fontSize=\"2xl\"\r\n            aria-label=\"burger\"\r\n            icon={<GoThreeBars />}\r\n            ref={btnRef}\r\n            onClick={onOpen}\r\n          ></IconButton>\r\n          <Drawer\r\n            isOpen={isOpen}\r\n            placement=\"right\"\r\n            onClose={onClose}\r\n            finalFocusRef={btnRef}\r\n          >\r\n            <DrawerOverlay>\r\n              <DrawerContent>\r\n                <DrawerCloseButton />\r\n                <DrawerHeader>\r\n                  <Flex align=\"center\">\r\n                    <Avatar name={userInfo.name}></Avatar>\r\n                    <Text casing=\"capitalize\" ml={2}>\r\n                      Hi {userInfo.name}\r\n                    </Text>\r\n                  </Flex>\r\n                </DrawerHeader>\r\n\r\n                <DrawerBody>\r\n                  <Text\r\n                    fontSize=\"xl\"\r\n                    transition=\"0.3s\"\r\n                    _hover={{ color: \"red.400\", ml: \"1\" }}\r\n                    my={2}\r\n                    cursor=\"pointer\"\r\n                    onClick={onClose}\r\n                  >\r\n                    <Link to=\"/home\">Dein Profil</Link>\r\n                  </Text>\r\n                  <Text\r\n                    fontSize=\"xl\"\r\n                    transition=\"0.3s\"\r\n                    _hover={{ color: \"red.400\", ml: \"1\" }}\r\n                    my={2}\r\n                    cursor=\"pointer\"\r\n                    onClick={onClose}\r\n                  >\r\n                    <Link to=\"/profiles\">Andere Profile</Link>\r\n                  </Text>\r\n                  <Text\r\n                    fontSize=\"xl\"\r\n                    transition=\"0.3s\"\r\n                    _hover={{ color: \"red.400\", ml: \"1\" }}\r\n                    my={2}\r\n                    cursor=\"pointer\"\r\n                    onClick={onClose}\r\n                  >\r\n                    <Link to=\"/dashboard\">Dashboard</Link>\r\n                  </Text>\r\n                  <Text\r\n                    fontSize=\"xl\"\r\n                    transition=\"0.3s\"\r\n                    _hover={{ color: \"red.400\", ml: \"1\" }}\r\n                    my={2}\r\n                    cursor=\"pointer\"\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line\r\n                      onClose;\r\n                      dispatch(logoutUser());\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </Text>\r\n                </DrawerBody>\r\n              </DrawerContent>\r\n            </DrawerOverlay>\r\n          </Drawer>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import { Box, useToast } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { clearToast } from \"../slices/toastSlice\";\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\n// component\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  const { msg, type } = useSelector((state: RootState) => state.toast);\r\n  const { userInfo } = useSelector((state: RootState) => state.login);\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    if (type === \"success\") {\r\n      toast({\r\n        title: \"Erfolg\",\r\n        description: msg,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\"\r\n      });\r\n      dispatch(clearToast());\r\n    }\r\n    if (type === \"error\") {\r\n      toast({\r\n        title: \"Fehler\",\r\n        description: msg,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\"\r\n      });\r\n      dispatch(clearToast());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [type, msg, dispatch]);\r\n\r\n  React.useEffect(\r\n    () => {\r\n      if (userInfo._id.length === 0) {\r\n        history.push(\"/\");\r\n      }\r\n    },\r\n    // eslint-disable-next-line\r\n    [dispatch, history]\r\n  );\r\n  return (\r\n    <Box>\r\n      <Navbar />\r\n      <Box w={{ base: \"90%\", md: \"75%\" }} mx=\"auto\">\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  InputRightElement,\r\n  IconButton,\r\n  InputGroup,\r\n  Text,\r\n  Grid\r\n} from \"@chakra-ui/react\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../slices/auth/loginSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nconst Login = () => {\r\n  const [register, setRegister] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { loading, userInfo } = useSelector((state: RootState) => state.login);\r\n  const [showPW, setShowPW] = React.useState(false);\r\n  const initialValues = { email: \"\", password: \"\" };\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Es muss eine E-Mail Addresse sein!\")\r\n      .required(\"Bitte geben Sie Ihre E-Mail Addresse ein\"),\r\n\r\n    password: Yup.string()\r\n      .required(\"Bitte geben Sie Ihr Password ein\")\r\n      .min(6, \"mindestens 6 Zeichen\")\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (daten, { resetForm }) => {\r\n      // console.log(daten);\r\n      dispatch(loginUser(daten));\r\n\r\n      resetForm();\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (userInfo._id.length !== 0) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [history, userInfo]);\r\n  return (\r\n    <Grid placeItems=\"center\" h=\"85vh\">\r\n      <Box\r\n        bgGradient=\"linear(to-l,purple.100,red.100)\"\r\n        p={10}\r\n        mt={16}\r\n        boxShadow=\"lg\"\r\n        borderRadius=\"xl\"\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        mx=\"auto\"\r\n      >\r\n        <Heading bgGradient=\"linear(to-l,red.500,purple.500)\" bgClip=\"text\">\r\n          Login\r\n        </Heading>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {/* Email */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.email && formik.touched.email}\r\n            id=\"email\"\r\n            mt={4}\r\n          >\r\n            <FormLabel\r\n              bgGradient=\"linear(to-l,red.500,purple.500)\"\r\n              bgClip=\"text\"\r\n            >\r\n              E-Mail\r\n            </FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"YourBestEmail@example.com\"\r\n              {...formik.getFieldProps(\"email\")}\r\n            />\r\n\r\n            <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          {/* Password */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.password && formik.touched.password}\r\n            id=\"password\"\r\n            mt={4}\r\n          >\r\n            <FormLabel\r\n              bgGradient=\"linear(to-l,red.500,purple.500)\"\r\n              bgClip=\"text\"\r\n            >\r\n              Password\r\n            </FormLabel>\r\n            <InputGroup>\r\n              <Input\r\n                variant=\"flushed\"\r\n                type={showPW ? \"text\" : \"password\"}\r\n                placeholder=\"******\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <IconButton\r\n                  aria-label=\"hide/show password\"\r\n                  onClick={() => setShowPW(!showPW)}\r\n                  variant=\"ghost\"\r\n                  colorScheme=\"red\"\r\n                  h=\"1.75rem\"\r\n                >\r\n                  {showPW ? <FaEyeSlash /> : <FaEye />}\r\n                </IconButton>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          <Button isLoading={loading} mt={8} colorScheme=\"red\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n          <Text mt={4} fontStyle=\"italic\">\r\n            Noch kein Account?{\" \"}\r\n            <Link to=\"/register\">\r\n              <Text\r\n                as=\"span\"\r\n                cursor=\"pointer\"\r\n                bgGradient=\"linear(to-l,red.500,purple.500)\"\r\n                bgClip=\"text\"\r\n                onClick={() => setRegister(!register)}\r\n              >\r\n                hier klicken\r\n              </Text>\r\n            </Link>{\" \"}\r\n            um sich anzumelden!\r\n          </Text>\r\n        </form>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  InputRightElement,\r\n  IconButton,\r\n  InputGroup,\r\n  Text,\r\n  Grid\r\n} from \"@chakra-ui/react\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { registerUser } from \"../slices/auth/registerSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { loading } = useSelector((state: RootState) => state.register);\r\n  const { userInfo } = useSelector((state: RootState) => state.login);\r\n  const [showPW, setShowPW] = React.useState(false);\r\n  const initialValues = { email: \"\", password: \"\", name: \"\" };\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Es muss eine E-Mail Addresse sein!\")\r\n      .required(\"Bitte geben Sie Ihre E-Mail Addresse ein\"),\r\n    password: Yup.string()\r\n      .required(\"Bitte geben Sie Ihr Password ein\")\r\n      .min(6, \"mindestens 6 Zeichen\"),\r\n    name: Yup.string().required(\"Bitte geben Sie einen Benutzername ein\")\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (daten, { resetForm }) => {\r\n      // console.log(daten);\r\n      dispatch(registerUser(daten));\r\n\r\n      resetForm();\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (userInfo._id.length !== 0) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [history, userInfo]);\r\n  return (\r\n    <Grid placeItems=\"center\" h=\"85vh\">\r\n      <Box\r\n        bgGradient=\"linear(to-l,red.100,purple.100)\"\r\n        p={10}\r\n        boxShadow=\"lg\"\r\n        borderRadius=\"xl\"\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        mx=\"auto\"\r\n      >\r\n        <Heading bgGradient=\"linear(to-l,purple.500,red.500)\" bgClip=\"text\">\r\n          Anmeldung\r\n        </Heading>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {/* Username */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.name && formik.touched.name}\r\n            id=\"name\"\r\n            mt={4}\r\n          >\r\n            <FormLabel\r\n              bgGradient=\"linear(to-l,purple.500,red.500)\"\r\n              bgClip=\"text\"\r\n            >\r\n              Benutername\r\n            </FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Ihr Name\"\r\n              {...formik.getFieldProps(\"name\")}\r\n            />\r\n\r\n            <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* Email */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.email && formik.touched.email}\r\n            id=\"email\"\r\n            mt={4}\r\n          >\r\n            <FormLabel\r\n              bgGradient=\"linear(to-l,purple.500,red.500)\"\r\n              bgClip=\"text\"\r\n            >\r\n              E-Mail\r\n            </FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"YourBestEmail@example.com\"\r\n              {...formik.getFieldProps(\"email\")}\r\n            />\r\n\r\n            <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          {/* Password */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.password && formik.touched.password}\r\n            id=\"password\"\r\n            mt={4}\r\n          >\r\n            <FormLabel\r\n              bgGradient=\"linear(to-l,purple.500,red.500)\"\r\n              bgClip=\"text\"\r\n            >\r\n              Password\r\n            </FormLabel>\r\n            <InputGroup>\r\n              <Input\r\n                variant=\"flushed\"\r\n                type={showPW ? \"text\" : \"password\"}\r\n                placeholder=\"******\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <IconButton\r\n                  aria-label=\"hide/show password\"\r\n                  onClick={() => setShowPW(!showPW)}\r\n                  variant=\"ghost\"\r\n                  colorScheme=\"purple\"\r\n                  h=\"1.75rem\"\r\n                >\r\n                  {showPW ? <FaEyeSlash /> : <FaEye />}\r\n                </IconButton>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          <Button isLoading={loading} mt={8} colorScheme=\"purple\" type=\"submit\">\r\n            Anmelden\r\n          </Button>\r\n          <Text mt={4} fontStyle=\"italic\">\r\n            Schon ein Account?{\" \"}\r\n            <Link to=\"/\">\r\n              <Text\r\n                as=\"span\"\r\n                cursor=\"pointer\"\r\n                bgGradient=\"linear(to-l,purple.500,red.500)\"\r\n                bgClip=\"text\"\r\n              >\r\n                hier klicken\r\n              </Text>\r\n            </Link>{\" \"}\r\n            um sich einzuloggen!\r\n          </Text>\r\n        </form>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Register;\r\n","import {\r\n  Box,\r\n  Text,\r\n  Badge,\r\n  Button,\r\n  Flex,\r\n  IconButton,\r\n  ButtonGroup\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment/locale/de\";\r\n// components\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../store\";\r\n// redux action\r\nimport { deleteExp, deleteEdu } from \"../slices/profile/profileSlice\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nconst Profile = () => {\r\n  const { profileInfo } = useSelector((state: RootState) => state.profile);\r\n  const { userInfo } = useSelector((state: RootState) => state.login);\r\n  // console.log(profileInfo);\r\n  // Object.keys(profileInfo!).map((key, index) => {\r\n  //   console.log(key);\r\n  // });\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box my={8}>\r\n      <Text casing=\"capitalize\">\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Name:\r\n        </Text>{\" \"}\r\n        {userInfo.name}\r\n      </Text>\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Email:\r\n        </Text>{\" \"}\r\n        {userInfo.email}\r\n      </Text>\r\n\r\n      {/* company */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Firma:\r\n        </Text>{\" \"}\r\n        {profileInfo?.company}\r\n      </Text>\r\n      {/* location */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Ort:\r\n        </Text>{\" \"}\r\n        {profileInfo?.location}\r\n      </Text>\r\n      {/* bio */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Beschreibung:\r\n        </Text>{\" \"}\r\n        {profileInfo?.bio}\r\n      </Text>\r\n      {/* git */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Github:\r\n        </Text>{\" \"}\r\n        {profileInfo?.githubusername}\r\n      </Text>\r\n      {/* status */}\r\n      <Text casing=\"capitalize\">\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Status:\r\n        </Text>{\" \"}\r\n        {profileInfo?.status}\r\n      </Text>\r\n      {/* website */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Website:\r\n        </Text>{\" \"}\r\n        {profileInfo?.website}\r\n      </Text>\r\n      {/* skills */}\r\n\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Fähigkeiten:\r\n        </Text>{\" \"}\r\n        {profileInfo?.skills?.map((skill, index) => {\r\n          return (\r\n            <Badge mx={2} colorScheme=\"red\" key={index}>\r\n              {skill}\r\n            </Badge>\r\n          );\r\n        })}\r\n      </Text>\r\n\r\n      {/* Edu */}\r\n\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Bildung:\r\n        </Text>{\" \"}\r\n        {profileInfo?.education?.length === 0 && (\r\n          <Text>Noch keine Einträge</Text>\r\n        )}\r\n        {profileInfo?.education?.map((edu, index) => {\r\n          // console.log(edu.current);\r\n          return (\r\n            <Box\r\n              key={edu._id}\r\n              border=\"4px\"\r\n              p={6}\r\n              borderRadius=\"xl\"\r\n              borderColor=\"purple.500\"\r\n              my={4}\r\n              position=\"relative\"\r\n            >\r\n              <IconButton\r\n                colorScheme=\"red\"\r\n                position=\"absolute\"\r\n                top=\"5px\"\r\n                right=\"5px\"\r\n                aria-label=\"delete\"\r\n                icon={<FaTrash />}\r\n                onClick={() => {\r\n                  dispatch(deleteEdu({ id: edu._id }));\r\n                }}\r\n              ></IconButton>\r\n              <Text>Schule {edu.school}</Text>\r\n              <Text>Abschulss {edu.degree}</Text>\r\n              <Flex>\r\n                <Text>\r\n                  <Text as=\"ins\">Von</Text>{\" \"}\r\n                  <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                    {edu.from}\r\n                  </Moment>\r\n                </Text>\r\n                <Text ml={2}>\r\n                  <Text as=\"ins\">bis</Text>{\" \"}\r\n                  {edu.current ? (\r\n                    \"Jetzt\"\r\n                  ) : (\r\n                    <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                      {edu.to}\r\n                    </Moment>\r\n                  )}\r\n                </Text>\r\n              </Flex>\r\n              <Text>{edu.description}</Text>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Text>\r\n\r\n      {/* Exp */}\r\n\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"red.500\" as=\"span\">\r\n          Erfahrungen:\r\n        </Text>{\" \"}\r\n        {profileInfo?.experience?.length === 0 && (\r\n          <Text>Noch keine Einträge</Text>\r\n        )}\r\n        {profileInfo?.experience?.map((exp, index) => {\r\n          // console.log(edu.current);\r\n          return (\r\n            <Box\r\n              key={exp._id}\r\n              border=\"4px\"\r\n              p={6}\r\n              borderRadius=\"xl\"\r\n              borderColor=\"red.500\"\r\n              my={4}\r\n              position=\"relative\"\r\n            >\r\n              <IconButton\r\n                colorScheme=\"purple\"\r\n                position=\"absolute\"\r\n                top=\"5px\"\r\n                right=\"5px\"\r\n                aria-label=\"delete\"\r\n                icon={<FaTrash />}\r\n                onClick={() => {\r\n                  dispatch(deleteExp({ id: exp._id }));\r\n                }}\r\n              ></IconButton>\r\n              <Text>Titel {exp.title}</Text>\r\n              <Text>Firma {exp.company}</Text>\r\n              <Flex>\r\n                <Text>\r\n                  <Text as=\"ins\">Von</Text>{\" \"}\r\n                  <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                    {exp.from}\r\n                  </Moment>\r\n                </Text>\r\n                <Text ml={2}>\r\n                  <Text as=\"ins\">bis</Text>{\" \"}\r\n                  {exp.current ? (\r\n                    \"Jetzt\"\r\n                  ) : (\r\n                    <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                      {exp.to}\r\n                    </Moment>\r\n                  )}\r\n                </Text>\r\n              </Flex>\r\n              <Text>{exp.description}</Text>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Text>\r\n      {/* <Grid\r\n        templateColumns={{ base: \"repeat(2,1fr)\", md: \"repeat(4,1fr)\" }}\r\n        gap={{ base: \"2\", md: \"4\" }}\r\n        mt={8}\r\n      > */}\r\n      <ButtonGroup>\r\n        <Button size=\"md\" colorScheme=\"purple\" variant=\"outline\">\r\n          <Link to=\"/profileedit\">Profil bearbeiten</Link>\r\n        </Button>\r\n        <Button size=\"md\" colorScheme=\"purple\">\r\n          <Link to=\"/createEdu\">Bildung hinzufügen</Link>\r\n        </Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup>\r\n        <Button\r\n          ml={{ base: \"0\", md: \"2\" }}\r\n          mt={{ base: \"4\", md: \"0\" }}\r\n          size=\"md\"\r\n          colorScheme=\"purple\"\r\n        >\r\n          <Link to=\"/createExp\">Erfahrungen hinzufügen</Link>\r\n        </Button>\r\n      </ButtonGroup>\r\n      {/* <Button\r\n          onClick={() => {\r\n            if (\r\n              window.confirm(\"Es gibt kein zurück mehr! Bist du dir sicher?\")\r\n            ) {\r\n              dispatch(deleteProfile({ id: profileInfo?._id! }));\r\n            }\r\n          }}\r\n          colorScheme=\"red\"\r\n        >\r\n          Account löschen\r\n        </Button> */}\r\n      {/* </Grid> */}\r\n    </Box>\r\n  );\r\n};\r\nexport default Profile;\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Select,\r\n  FormHelperText,\r\n  Textarea\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// components\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n// redux actions\r\nimport { createProfile } from \"../slices/profile/profileSlice\";\r\n\r\nconst ProfileCreate = () => {\r\n  const {\r\n    userInfo: { name, email }\r\n  } = useSelector((state: RootState) => state.login);\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    name,\r\n    email,\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    bio: \"\",\r\n    githubusername: \"\",\r\n    social: {\r\n      youtube: \"\",\r\n      twitter: \"\",\r\n      facebook: \"\",\r\n      instagram: \"\"\r\n    }\r\n  };\r\n\r\n  const validation = () =>\r\n    Yup.object({\r\n      company: Yup.string(),\r\n      website: Yup.string(),\r\n      location: Yup.string(),\r\n      status: Yup.string().required(\"Bitte geben Sie einen Status ein\"),\r\n      skills: Yup.string().required(\"Bitte geben sie mindestens 3 ein\"),\r\n      bio: Yup.string(),\r\n      githubusername: Yup.string(),\r\n\r\n      youtube: Yup.string(),\r\n      twitter: Yup.string(),\r\n      facebook: Yup.string(),\r\n      instagram: Yup.string()\r\n    });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: validation,\r\n    onSubmit: (daten, { resetForm }) => {\r\n      // console.log(daten);\r\n      dispatch(createProfile(daten));\r\n    }\r\n  });\r\n  return (\r\n    <Box>\r\n      <Heading mt={6} color=\"red.400\">\r\n        Erstelle ein Profil\r\n      </Heading>\r\n      <Text>Erzähl etwas von dir</Text>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Box mt={4}>\r\n          {/* Name */}\r\n          <FormControl isDisabled>\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              {...formik.getFieldProps(\"name\")}\r\n            />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          {/* Email */}\r\n          <FormControl isDisabled>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              {...formik.getFieldProps(\"email\")}\r\n            />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          {/* Company */}\r\n          <FormControl id=\"company\" mt={4}>\r\n            <FormLabel>Firma</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste Firma GmBH\"\r\n              {...formik.getFieldProps(\"company\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* Website */}\r\n          <FormControl id=\"website\" mt={4}>\r\n            <FormLabel>Website</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"https//:www.besteSeite.de\"\r\n              {...formik.getFieldProps(\"website\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* location */}\r\n          <FormControl id=\"location\" mt={4}>\r\n            <FormLabel>Ort</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"bester Ort\"\r\n              {...formik.getFieldProps(\"location\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* Status */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.status && formik.touched.status}\r\n            id=\"status\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Status</FormLabel>\r\n            <Select\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Status\"\r\n              {...formik.getFieldProps(\"status\")}\r\n            >\r\n              <option value=\"junior\">Junior</option>\r\n              <option value=\"senior\">Senior</option>\r\n              <option value=\"ceo\">CEO</option>\r\n              <option value=\"cto\">CTO</option>\r\n              <option value=\"praktikant\">Praktikant</option>\r\n              <option value=\"anderes\">Anderes</option>\r\n            </Select>\r\n            <FormErrorMessage>{formik.errors.status}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* SKills */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.skills && formik.touched.skills}\r\n            id=\"skills\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Fähigkeiten </FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"html, css, js\"\r\n              {...formik.getFieldProps(\"skills\")}\r\n            />\r\n            <FormHelperText>Mit Komma getrennt</FormHelperText>\r\n\r\n            <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* Bio */}\r\n          <FormControl id=\"bio\" mt={4}>\r\n            <FormLabel>Kurze Beschreibung deiner Person</FormLabel>\r\n            <Textarea\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"deine beste Beschreibung\"\r\n              {...formik.getFieldProps(\"bio\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* github */}\r\n          <FormControl id=\"githubusername\" mt={4}>\r\n            <FormLabel>Github Username</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Github Name\"\r\n              {...formik.getFieldProps(\"githubusername\")}\r\n            />\r\n          </FormControl>\r\n          <Text fontSize=\"xl\" my={6}>\r\n            Soziale Medien\r\n          </Text>\r\n          {/* yt */}\r\n          <FormControl id=\"youtube\" mt={4}>\r\n            <FormLabel>YouTube</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"YouTube\"\r\n              {...formik.getFieldProps(\"youtube\")}\r\n            />\r\n          </FormControl>\r\n          {/* twitter */}\r\n          <FormControl id=\"twitter\" mt={4}>\r\n            <FormLabel>Twitter</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Twitter\"\r\n              {...formik.getFieldProps(\"twitter\")}\r\n            />\r\n          </FormControl>\r\n          {/* fb */}\r\n          <FormControl id=\"facebook\" mt={4}>\r\n            <FormLabel>Facebook</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Facebook\"\r\n              {...formik.getFieldProps(\"facebook\")}\r\n            />\r\n          </FormControl>\r\n          {/* insta */}\r\n          <FormControl id=\"instagram\" mt={4}>\r\n            <FormLabel>Instagram</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Instagram\"\r\n              {...formik.getFieldProps(\"instagram\")}\r\n            />\r\n          </FormControl>\r\n          <Box\r\n            as=\"button\"\r\n            py={2}\r\n            px={4}\r\n            my={8}\r\n            color=\"white\"\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"md\"\r\n            bgGradient=\"linear(to-r,purple.400,red.400)\"\r\n            _hover={{ bgGradient: \"linear(to-r,red.400,purple.400)\" }}\r\n            type=\"submit\"\r\n          >\r\n            Profil Erstellen\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nexport default ProfileCreate;\r\n","import { Box, Heading, Text, Spinner } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\n\r\n// components\r\nimport Profile from \"../components/Profile\";\r\nimport ProfileCreate from \"../components/ProfileCreate\";\r\n\r\nimport { getProfileOfLoggedUser } from \"../slices/profile/profileSlice\";\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\n// if user has a profile then show home else show profile to create one\r\n// error message: Es gibt noch kein Profile zu diesem User\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { profileInfo, loading } = useSelector(\r\n    (state: RootState) => state.profile\r\n  );\r\n  const { userInfo } = useSelector((state: RootState) => state.login);\r\n  React.useEffect(() => {\r\n    dispatch(getProfileOfLoggedUser());\r\n  }, [dispatch]);\r\n\r\n  // console.log(typeof profileInfo, profileInfo);\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n  return (\r\n    <Box>\r\n      {profileInfo === null ? (\r\n        <Heading my={6}>\r\n          Hi{\" \"}\r\n          <Text casing=\"capitalize\" as=\"span\">\r\n            {userInfo.name}\r\n          </Text>\r\n        </Heading>\r\n      ) : (\r\n        <Heading my={6}>Dein Profil</Heading>\r\n      )}\r\n\r\n      {profileInfo === null ? <ProfileCreate /> : <Profile />}\r\n    </Box>\r\n  );\r\n};\r\nexport default Home;\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Select,\r\n  FormHelperText,\r\n  Textarea\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// components\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n// redux actions\r\nimport { createProfile } from \"../slices/profile/profileSlice\";\r\n\r\nconst ProfileEdit = () => {\r\n  const history = useHistory();\r\n  const {\r\n    userInfo: { name, email }\r\n  } = useSelector((state: RootState) => state.login);\r\n  const { profileInfo } = useSelector((state: RootState) => state.profile);\r\n  const dispatch = useDispatch();\r\n\r\n  interface IInitValues {\r\n    name: string;\r\n    email: string;\r\n    social: {\r\n      youtube?: string;\r\n      twitter?: string;\r\n      instagram?: string;\r\n      facebook?: string;\r\n    };\r\n    skills: any;\r\n\r\n    bio: string;\r\n    company: string;\r\n    githubusername: string;\r\n    location: string;\r\n    status:\r\n      | \"status\"\r\n      | \"senior\"\r\n      | \"junior\"\r\n      | \"ceo\"\r\n      | \"cto\"\r\n      | \"praktikant\"\r\n      | \"anderes\";\r\n    website: string;\r\n  }\r\n\r\n  const [initValues, setInitValues] = React.useState<IInitValues>({\r\n    name,\r\n    email,\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"status\",\r\n    skills: [],\r\n    bio: \"\",\r\n    githubusername: \"\",\r\n    social: {\r\n      youtube: \"\",\r\n      twitter: \"\",\r\n      facebook: \"\",\r\n      instagram: \"\"\r\n    }\r\n  });\r\n  const validation = () =>\r\n    Yup.object({\r\n      company: Yup.string(),\r\n      website: Yup.string(),\r\n      location: Yup.string(),\r\n      status: Yup.string().required(\"Bitte geben Sie einen Status ein\"),\r\n      skills: Yup.string().required(\"Bitte geben sie mindestens 3 ein\"),\r\n      bio: Yup.string(),\r\n      githubusername: Yup.string(),\r\n\r\n      youtube: Yup.string(),\r\n      twitter: Yup.string(),\r\n      facebook: Yup.string(),\r\n      instagram: Yup.string()\r\n    });\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: initValues,\r\n    validationSchema: validation,\r\n    onSubmit: (daten, { resetForm }) => {\r\n      // console.log(daten);\r\n      // @ts-expect-error\r\n      dispatch(createProfile(daten));\r\n      history.push(\"/home\");\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (profileInfo) {\r\n      const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        bio,\r\n        githubusername,\r\n        skills,\r\n        social\r\n      } = profileInfo;\r\n      setInitValues((prevValues) => {\r\n        return {\r\n          ...prevValues,\r\n          company,\r\n          website,\r\n          status,\r\n          location,\r\n          skills,\r\n          bio,\r\n          githubusername,\r\n          social\r\n        };\r\n      });\r\n    }\r\n  }, [profileInfo]);\r\n  return (\r\n    <Box>\r\n      <Heading mt={6} color=\"purple.400\">\r\n        Profil bearbeiten\r\n      </Heading>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Box mt={4}>\r\n          {/* Name */}\r\n          <FormControl isDisabled>\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              {...formik.getFieldProps(\"name\")}\r\n            />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          {/* Email */}\r\n          <FormControl isDisabled>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              {...formik.getFieldProps(\"email\")}\r\n            />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          {/* Company */}\r\n          <FormControl id=\"company\" mt={4}>\r\n            <FormLabel>Firma</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste Firma GmBH\"\r\n              {...formik.getFieldProps(\"company\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* Website */}\r\n          <FormControl id=\"website\" mt={4}>\r\n            <FormLabel>Website</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"https//:www.besteSeite.de\"\r\n              {...formik.getFieldProps(\"website\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* location */}\r\n          <FormControl id=\"location\" mt={4}>\r\n            <FormLabel>Ort</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"bester Ort\"\r\n              {...formik.getFieldProps(\"location\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* Status */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.status && formik.touched.status}\r\n            id=\"status\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Status</FormLabel>\r\n            <Select\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Status\"\r\n              {...formik.getFieldProps(\"status\")}\r\n            >\r\n              <option value=\"junior\">Junior</option>\r\n              <option value=\"senior\">Senior</option>\r\n              <option value=\"ceo\">CEO</option>\r\n              <option value=\"cto\">CTO</option>\r\n              <option value=\"praktikant\">Praktikant</option>\r\n              <option value=\"anderes\">Anderes</option>\r\n            </Select>\r\n            <FormErrorMessage>{formik.errors.status}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* SKills */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.skills && !!formik.touched.skills}\r\n            id=\"skills\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Fähigkeiten </FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"html, css, js\"\r\n              {...formik.getFieldProps(\"skills\")}\r\n            />\r\n            <FormHelperText>Mit Komma getrennt</FormHelperText>\r\n\r\n            <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* Bio */}\r\n          <FormControl id=\"bio\" mt={4}>\r\n            <FormLabel>Kurze Beschreibung deiner Person</FormLabel>\r\n            <Textarea\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"deine beste Beschreibung\"\r\n              {...formik.getFieldProps(\"bio\")}\r\n            />\r\n          </FormControl>\r\n\r\n          {/* github */}\r\n          <FormControl id=\"githubusername\" mt={4}>\r\n            <FormLabel>Github Username</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Github Name\"\r\n              {...formik.getFieldProps(\"githubusername\")}\r\n            />\r\n          </FormControl>\r\n          <Text fontSize=\"xl\" my={6}>\r\n            Soziale Medien\r\n          </Text>\r\n          {/* yt */}\r\n          <FormControl id=\"youtube\" mt={4}>\r\n            <FormLabel>YouTube</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"YouTube\"\r\n              {...formik.getFieldProps(\"youtube\")}\r\n            />\r\n          </FormControl>\r\n          {/* twitter */}\r\n          <FormControl id=\"twitter\" mt={4}>\r\n            <FormLabel>Twitter</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Twitter\"\r\n              {...formik.getFieldProps(\"twitter\")}\r\n            />\r\n          </FormControl>\r\n          {/* fb */}\r\n          <FormControl id=\"facebook\" mt={4}>\r\n            <FormLabel>Facebook</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Facebook\"\r\n              {...formik.getFieldProps(\"facebook\")}\r\n            />\r\n          </FormControl>\r\n          {/* insta */}\r\n          <FormControl id=\"instagram\" mt={4}>\r\n            <FormLabel>Instagram</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Instagram\"\r\n              {...formik.getFieldProps(\"instagram\")}\r\n            />\r\n          </FormControl>\r\n          <Box\r\n            as=\"button\"\r\n            py={2}\r\n            px={4}\r\n            my={8}\r\n            color=\"white\"\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"md\"\r\n            bgGradient=\"linear(to-r,purple.400,red.400)\"\r\n            _hover={{ bgGradient: \"linear(to-r,red.400,purple.400)\" }}\r\n            type=\"submit\"\r\n          >\r\n            Profil bearbeiten\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nexport default ProfileEdit;\r\n","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  useMediaQuery,\r\n  Spinner,\r\n  Flex,\r\n  Icon,\r\n  Badge\r\n} from \"@chakra-ui/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// redux\r\nimport { getProfiles } from \"../slices/profile/profileSlice\";\r\nimport { RootState } from \"../store\";\r\n// icons\r\nimport { MdWork, MdLocationOn, MdPerson } from \"react-icons/md\";\r\nimport { CgWebsite } from \"react-icons/cg\";\r\n// router\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profiles = () => {\r\n  const [lessThan782] = useMediaQuery(\"(max-width: 782px)\");\r\n  const dispatch = useDispatch();\r\n  const { profiles, loading } = useSelector(\r\n    (state: RootState) => state.profile\r\n  );\r\n  React.useEffect(() => {\r\n    dispatch(getProfiles());\r\n  }, [dispatch]);\r\n  if (loading) {\r\n    return (\r\n      <Box>\r\n        <Spinner color=\"red.400\" my={8}></Spinner>\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box>\r\n      <Heading color=\"red.400\" my={8}>\r\n        Personen, die du vielleicht kennst\r\n      </Heading>\r\n      {profiles?.map((profile) => {\r\n        const {\r\n          user,\r\n          bio,\r\n          company,\r\n          status,\r\n          location,\r\n          website,\r\n          skills,\r\n          _id\r\n        } = profile;\r\n        return (\r\n          <Box\r\n            p={6}\r\n            bgGradient=\"linear(to-tl,purple.100,red.50)\"\r\n            my={6}\r\n            borderRadius=\"xl\"\r\n            boxShadow=\"md\"\r\n            _hover={{ boxShadow: \"xl\" }}\r\n            transition=\"0.3s\"\r\n            cursor=\"pointer\"\r\n          >\r\n            <Link to={`/profiles/${_id}`}>\r\n              <Text\r\n                color=\"red.600\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"bold\"\r\n                casing=\"capitalize\"\r\n              >\r\n                {user.name}\r\n              </Text>\r\n              <Flex color=\"red.300\">\r\n                {company && (\r\n                  <Text mr={1.5}>\r\n                    <Icon as={MdWork} /> {company}\r\n                  </Text>\r\n                )}\r\n\r\n                {location && (\r\n                  <Text mr={1.5}>\r\n                    <Icon as={MdLocationOn} /> {location}\r\n                  </Text>\r\n                )}\r\n                {!lessThan782 && (\r\n                  <>\r\n                    {status && (\r\n                      <Text casing=\"capitalize\" mr={1.5}>\r\n                        <Icon as={MdPerson} /> {status}\r\n                      </Text>\r\n                    )}\r\n                    {website && (\r\n                      <Text mr={1.5}>\r\n                        <Icon as={CgWebsite} /> {website}\r\n                      </Text>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {/*  */}\r\n              </Flex>\r\n              <Text fontSize=\"xl\">{bio}</Text>\r\n              {skills?.map((skill, i) => {\r\n                return (\r\n                  <Badge mr={1.5} key={i} colorScheme=\"purple\">\r\n                    {skill}\r\n                  </Badge>\r\n                );\r\n              })}\r\n            </Link>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\nexport default Profiles;\r\n","import * as React from \"react\";\r\nimport { Box, Text, Spinner, Flex, Badge } from \"@chakra-ui/react\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// redux\r\nimport { getProfilesByID } from \"../slices/profile/profileSlice\";\r\nimport { RootState } from \"../store\";\r\n\r\n// router\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SingleProfile = () => {\r\n  // type for params\r\n  interface IParams {\r\n    id: string;\r\n  }\r\n  const { id } = useParams<IParams>();\r\n  const dispatch = useDispatch();\r\n  const { singleProfile, loading } = useSelector(\r\n    (state: RootState) => state.profile\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getProfilesByID({ _id: id }));\r\n  }, [dispatch, id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box>\r\n        <Spinner color=\"red.400\" my={8}></Spinner>\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box my={8}>\r\n      <Text casing=\"capitalize\">\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Name:\r\n        </Text>{\" \"}\r\n        {singleProfile?.user.name}\r\n      </Text>\r\n\r\n      {/* company */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Firma:\r\n        </Text>{\" \"}\r\n        {singleProfile?.company}\r\n      </Text>\r\n      {/* location */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Ort:\r\n        </Text>{\" \"}\r\n        {singleProfile?.location}\r\n      </Text>\r\n      {/* bio */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Beschreibung:\r\n        </Text>{\" \"}\r\n        {singleProfile?.bio}\r\n      </Text>\r\n      {/* git */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Github:\r\n        </Text>{\" \"}\r\n        {singleProfile?.githubusername}\r\n      </Text>\r\n      {/* status */}\r\n      <Text casing=\"capitalize\">\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Status:\r\n        </Text>{\" \"}\r\n        {singleProfile?.status}\r\n      </Text>\r\n      {/* website */}\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Website:\r\n        </Text>{\" \"}\r\n        {singleProfile?.website}\r\n      </Text>\r\n      {/* skills */}\r\n\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Fähigkeiten:\r\n        </Text>{\" \"}\r\n        {singleProfile?.skills?.map((skill, index) => {\r\n          return (\r\n            <Badge mr={2} colorScheme=\"red\" key={index}>\r\n              {skill}\r\n            </Badge>\r\n          );\r\n        })}\r\n      </Text>\r\n\r\n      {/* Edu */}\r\n\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"purple.500\" as=\"span\">\r\n          Bildung:\r\n        </Text>{\" \"}\r\n        {singleProfile?.education?.length === 0 && (\r\n          <Text>Noch keine Einträge</Text>\r\n        )}\r\n        {singleProfile?.education?.map((edu, index) => {\r\n          // console.log(edu.current);\r\n          return (\r\n            <Box\r\n              key={edu._id}\r\n              border=\"4px\"\r\n              p={6}\r\n              borderRadius=\"xl\"\r\n              borderColor=\"purple.500\"\r\n              my={4}\r\n              position=\"relative\"\r\n            >\r\n              <Text>Schule {edu.school}</Text>\r\n              <Text>Abschulss {edu.degree}</Text>\r\n              <Flex>\r\n                <Text>\r\n                  <Text as=\"ins\">Von</Text>{\" \"}\r\n                  <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                    {edu.from}\r\n                  </Moment>\r\n                </Text>\r\n                <Text ml={2}>\r\n                  <Text as=\"ins\">bis</Text>{\" \"}\r\n                  {edu.current ? (\r\n                    \"Jetzt\"\r\n                  ) : (\r\n                    <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                      {edu.to}\r\n                    </Moment>\r\n                  )}\r\n                </Text>\r\n              </Flex>\r\n              <Text>{edu.description}</Text>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Text>\r\n\r\n      {/* Exp */}\r\n\r\n      <Text>\r\n        <Text fontWeight=\"semibold\" color=\"red.500\" as=\"span\">\r\n          Erfahrungen:\r\n        </Text>{\" \"}\r\n        {singleProfile?.experience?.length === 0 && (\r\n          <Text>Noch keine Einträge</Text>\r\n        )}\r\n        {singleProfile?.experience?.map((exp, index) => {\r\n          // console.log(edu.current);\r\n          return (\r\n            <Box\r\n              key={exp._id}\r\n              border=\"4px\"\r\n              p={6}\r\n              borderRadius=\"xl\"\r\n              borderColor=\"red.500\"\r\n              my={4}\r\n              position=\"relative\"\r\n            >\r\n              <Text>Titel {exp.title}</Text>\r\n              <Text>Firma {exp.company}</Text>\r\n              <Flex>\r\n                <Text>\r\n                  <Text as=\"ins\">Von</Text>{\" \"}\r\n                  <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                    {exp.from}\r\n                  </Moment>\r\n                </Text>\r\n                <Text ml={2}>\r\n                  <Text as=\"ins\">bis</Text>{\" \"}\r\n                  {exp.current ? (\r\n                    \"Jetzt\"\r\n                  ) : (\r\n                    <Moment locale=\"de\" format=\"Do MMMM YYYY\">\r\n                      {exp.to}\r\n                    </Moment>\r\n                  )}\r\n                </Text>\r\n              </Flex>\r\n              <Text>{exp.description}</Text>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Text>\r\n    </Box>\r\n  );\r\n};\r\nexport default SingleProfile;\r\n","import {\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  Checkbox\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// components\r\n// Redux\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// redux actions\r\nimport { updateEdu } from \"../slices/profile/profileSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateEdu = () => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  };\r\n\r\n  const validation = () =>\r\n    Yup.object({\r\n      school: Yup.string().required(\"Bitte geben Sie eine Schule ein\"),\r\n      degree: Yup.string().required(\"Bitte geben Sie einen Abschluss ein\"),\r\n      fieldofstudy: Yup.string().required(\r\n        \"Bitte geben Sie einen Aufgabengebiet ein\"\r\n      ),\r\n      current: Yup.string(),\r\n      from: Yup.string(),\r\n      to: Yup.string(),\r\n      description: Yup.string()\r\n    });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: validation,\r\n    onSubmit: (daten, { resetForm }) => {\r\n      console.log(daten);\r\n      dispatch(updateEdu(daten));\r\n      resetForm();\r\n      history.push(\"/home\");\r\n    }\r\n  });\r\n  return (\r\n    <Box>\r\n      <Heading mt={6} color=\"red.400\">\r\n        Bildung\r\n      </Heading>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Box mt={4}>\r\n          {/* Schule */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.school && formik.touched.school}\r\n          >\r\n            <FormLabel>Schule</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste Schule\"\r\n              {...formik.getFieldProps(\"school\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.school}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* Abschluss */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.degree && formik.touched.degree}\r\n          >\r\n            <FormLabel>Abschluss</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Bester Abschluss\"\r\n              {...formik.getFieldProps(\"degree\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.degree}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* fieldofstudy */}\r\n          <FormControl\r\n            isInvalid={\r\n              !!formik.errors.fieldofstudy && formik.touched.fieldofstudy\r\n            }\r\n            id=\"fieldofstudy\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Aufgabengebiete</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste Aufgabengebiete\"\r\n              {...formik.getFieldProps(\"fieldofstudy\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.fieldofstudy}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* desc */}\r\n          <FormControl id=\"description\" mt={4}>\r\n            <FormLabel>Beschreibung</FormLabel>\r\n            <Textarea\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste beschreibung\"\r\n              {...formik.getFieldProps(\"description\")}\r\n            />\r\n          </FormControl>\r\n          {/* from */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.from && formik.touched.from}\r\n            id=\"from\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Von</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"date\"\r\n              {...formik.getFieldProps(\"from\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.from}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* current */}\r\n          <FormControl id=\"current\" mt={4}>\r\n            <Checkbox\r\n              // onChange={() => {\r\n              //   setChecked(!checked);\r\n              //   console.log(checked);\r\n              // }}\r\n              {...formik.getFieldProps(\"current\")}\r\n            >\r\n              Bis jetzt?\r\n            </Checkbox>\r\n          </FormControl>\r\n          {/* bis */}\r\n          <FormControl isDisabled={formik.values.current} id=\"to\" mt={4}>\r\n            <FormLabel>Bis</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"date\"\r\n              {...formik.getFieldProps(\"to\")}\r\n            />\r\n          </FormControl>\r\n          <Button type=\"submit\" mt={8} colorScheme=\"purple\" variant=\"outline\">\r\n            Erstellen\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nexport default CreateEdu;\r\n","import {\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  Checkbox\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// components\r\n// Redux\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// redux actions\r\nimport { updateExp } from \"../slices/profile/profileSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateExp = () => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    title: \"\",\r\n    company: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  };\r\n\r\n  const validation = () =>\r\n    Yup.object({\r\n      title: Yup.string().required(\"Bitte geben Sie einen Titel ein\"),\r\n      company: Yup.string().required(\"Bitte geben Sie eine Firma ein\"),\r\n      location: Yup.string().required(\"Bitte geben Sie einen Ort ein\"),\r\n      current: Yup.string(),\r\n      from: Yup.string(),\r\n      to: Yup.string(),\r\n      description: Yup.string()\r\n    });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: validation,\r\n    onSubmit: (daten, { resetForm }) => {\r\n      console.log(daten);\r\n      dispatch(updateExp(daten));\r\n      resetForm();\r\n      history.push(\"/home\");\r\n    }\r\n  });\r\n  return (\r\n    <Box>\r\n      <Heading mt={6} color=\"purple.400\">\r\n        Erfahrungen\r\n      </Heading>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Box mt={4}>\r\n          {/* Schule */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.title && formik.touched.title}\r\n          >\r\n            <FormLabel>Titel</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Bester Titel\"\r\n              {...formik.getFieldProps(\"title\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.title}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* Abschluss */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.company && formik.touched.company}\r\n          >\r\n            <FormLabel>Firma</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste Firma\"\r\n              {...formik.getFieldProps(\"company\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.company}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* location */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.location && formik.touched.location}\r\n            id=\"location\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Ort</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Bester Ort\"\r\n              {...formik.getFieldProps(\"location\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.location}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* desc */}\r\n          <FormControl id=\"description\" mt={4}>\r\n            <FormLabel>Beschreibung</FormLabel>\r\n            <Textarea\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              placeholder=\"Beste beschreibung\"\r\n              {...formik.getFieldProps(\"description\")}\r\n            />\r\n          </FormControl>\r\n          {/* from */}\r\n          <FormControl\r\n            isInvalid={!!formik.errors.from && formik.touched.from}\r\n            id=\"from\"\r\n            mt={4}\r\n          >\r\n            <FormLabel>Von</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"date\"\r\n              {...formik.getFieldProps(\"from\")}\r\n            />\r\n            <FormErrorMessage>{formik.errors.from}</FormErrorMessage>\r\n          </FormControl>\r\n          {/* current */}\r\n          <FormControl id=\"current\" mt={4}>\r\n            <Checkbox\r\n              // onChange={() => {\r\n              //   setChecked(!checked);\r\n              //   console.log(checked);\r\n              // }}\r\n              {...formik.getFieldProps(\"current\")}\r\n            >\r\n              Bis jetzt?\r\n            </Checkbox>\r\n          </FormControl>\r\n          {/* bis */}\r\n          <FormControl isDisabled={formik.values.current} id=\"to\" mt={4}>\r\n            <FormLabel>Bis</FormLabel>\r\n            <Input\r\n              variant=\"flushed\"\r\n              type=\"date\"\r\n              {...formik.getFieldProps(\"to\")}\r\n            />\r\n          </FormControl>\r\n          <Button type=\"submit\" mt={8} colorScheme=\"red\" variant=\"outline\">\r\n            Erstellen\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nexport default CreateExp;\r\n","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Button,\r\n  Textarea\r\n} from \"@chakra-ui/react\";\r\n// Redux\r\nimport { useDispatch } from \"react-redux\";\r\n// Formik\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// Redux Actions\r\nimport { createPost } from \"../slices/postSlice\";\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: { text: \"\" },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string().required(\"Dieses Feld darf nicht leer sein\")\r\n    }),\r\n    onSubmit: (daten, { resetForm }) => {\r\n      // console.log(daten);\r\n      resetForm();\r\n      dispatch(createPost(daten));\r\n    }\r\n  });\r\n  return (\r\n    <Box>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <FormControl isInvalid={!!formik.errors.text && formik.touched.text}>\r\n          <FormLabel>Dein Post</FormLabel>\r\n          <Textarea\r\n            placeholder=\"Dein Post ....\"\r\n            {...formik.getFieldProps(\"text\")}\r\n          ></Textarea>\r\n          <FormErrorMessage>{formik.errors.text}</FormErrorMessage>\r\n        </FormControl>\r\n        <Button mt={4} bg=\"purple.600\" color=\"purple.100\" type=\"submit\">\r\n          Posten\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nexport default PostForm;\r\n","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Button,\r\n  Textarea,\r\n  Flex\r\n} from \"@chakra-ui/react\";\r\n// Redux\r\nimport { useDispatch } from \"react-redux\";\r\n// Formik\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// Redux Actions\r\nimport { createComment } from \"../slices/postSlice\";\r\n\r\nconst CommentForm = ({ postId }: { postId: string }) => {\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: { text: \"\" },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string().required(\"Dieses Feld darf nicht leer sein\")\r\n    }),\r\n    onSubmit: (daten, { resetForm }) => {\r\n      console.log(daten);\r\n      resetForm();\r\n      dispatch(createComment({ text: daten.text, postId }));\r\n    }\r\n  });\r\n  return (\r\n    <Box mt={2}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <FormControl isInvalid={!!formik.errors.text && formik.touched.text}>\r\n          <Flex>\r\n            <Textarea\r\n              variant=\"flushed\"\r\n              colorScheme=\"purple\"\r\n              placeholder=\"Schreibe etwas...\"\r\n              rows={1}\r\n              {...formik.getFieldProps(\"text\")}\r\n            ></Textarea>\r\n            <FormErrorMessage>{formik.errors.text}</FormErrorMessage>\r\n            <Button type=\"submit\" ml={2} colorScheme=\"purple\" variant=\"outline\">\r\n              Abschicken\r\n            </Button>\r\n          </Flex>\r\n        </FormControl>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nexport default CommentForm;\r\n","import * as React from \"react\";\nimport { Route, Switch, Redirect, RouteProps } from \"react-router-dom\";\n\n// Layout\nimport Layout from \"./components/Layout\";\n\n// pages\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/Home\";\nimport ProfileEdit from \"./pages/ProfileEdit\";\nimport Profiles from \"./pages/Profiles\";\nimport SingleProfile from \"./pages/SingleProfile\";\nimport CreateEdu from \"./pages/CreateEdu\";\nimport CreateExp from \"./pages/CreateExp\";\nimport Dashboard from \"./pages/Dashboard\";\n\n// Redux\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"./store\";\n\n// interface for route\ninterface IRoute {\n  path: string;\n  exact: boolean;\n  component: any;\n  private: boolean;\n}\n\nconst routes: IRoute[] = [\n  {\n    path: \"/\",\n    exact: true,\n    component: Login,\n    private: false\n  },\n  {\n    path: \"/register\",\n    exact: false,\n    component: Register,\n    private: false\n  },\n  {\n    path: \"/home\",\n    exact: false,\n    component: Home,\n    private: true\n  },\n  {\n    path: \"/profileedit\",\n    exact: false,\n    component: ProfileEdit,\n    private: true\n  },\n  {\n    path: \"/profiles\",\n    exact: true,\n    component: Profiles,\n    private: true\n  },\n  {\n    path: \"/profiles/:id\",\n    exact: false,\n    component: SingleProfile,\n    private: true\n  },\n  {\n    path: \"/createEdu\",\n    exact: false,\n    component: CreateEdu,\n    private: true\n  },\n  {\n    path: \"/createExp\",\n    exact: false,\n    component: CreateExp,\n    private: true\n  },\n  {\n    path: \"/dashboard\",\n    exact: false,\n    component: Dashboard,\n    private: true\n  }\n];\n\nconst PrivateRoute = (props: RouteProps) => {\n  const {\n    userInfo: { _id }\n  } = useSelector((state: RootState) => state.login);\n  const { children, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return _id.length !== 0 ? children : <Redirect to=\"/\"></Redirect>;\n      }}\n    ></Route>\n  );\n};\n\nconst App = () => {\n  return (\n    <Layout>\n      <Switch>\n        {routes.map((route, index) => {\n          const RouteType = route.private ? PrivateRoute : Route;\n          return (\n            <RouteType exact={route.exact} path={route.path} key={index}>\n              <route.component />\n            </RouteType>\n          );\n        })}\n      </Switch>\n    </Layout>\n  );\n};\nexport default App;\n","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Spinner,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  IconButton,\r\n  ButtonGroup,\r\n  Flex\r\n} from \"@chakra-ui/react\";\r\n// redux\r\nimport {\r\n  getPosts,\r\n  deletePost,\r\n  clearStateAfterPutOrDeleteForReRendering,\r\n  likePost,\r\n  unlikePost,\r\n  deleteComment\r\n} from \"../slices/postSlice\";\r\nimport { RootState } from \"../store\";\r\n// Moment\r\nimport Moment from \"react-moment\";\r\n// component\r\nimport PostForm from \"../components/PostForm\";\r\nimport CommentForm from \"../components/CommentForm\";\r\n// icons\r\nimport { BiDownvote, BiUpvote } from \"react-icons/bi\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { postInfo, loading, success } = useSelector(\r\n    (state: RootState) => state.post\r\n  );\r\n  const { userInfo } = useSelector((state: RootState) => state.login);\r\n  React.useEffect(() => {\r\n    dispatch(getPosts());\r\n    dispatch(clearStateAfterPutOrDeleteForReRendering());\r\n  }, [dispatch, success]);\r\n  if (loading) {\r\n    return (\r\n      <Box my={6}>\r\n        <Spinner color=\"red.500\" />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box>\r\n      <Heading color=\"red.500\" my={8}>\r\n        Poste etwas!\r\n      </Heading>\r\n      <PostForm />\r\n      {postInfo?.map((post) => {\r\n        return (\r\n          <Box\r\n            boxShadow=\"lg\"\r\n            my={4}\r\n            borderRadius=\"md\"\r\n            bg=\"purple.50\"\r\n            p={4}\r\n            key={post._id}\r\n            position=\"relative\"\r\n          >\r\n            {userInfo._id === post.user && (\r\n              <IconButton\r\n                colorScheme=\"red\"\r\n                position=\"absolute\"\r\n                top=\"5px\"\r\n                right=\"5px\"\r\n                aria-label=\"delete\"\r\n                icon={<FaTrash />}\r\n                onClick={() => {\r\n                  if (window.confirm(\"Bist du sicher?\")) {\r\n                    dispatch(deletePost({ postId: post._id }));\r\n                  }\r\n                }}\r\n              ></IconButton>\r\n            )}\r\n\r\n            <Text\r\n              cursor=\"pointer\"\r\n              casing=\"capitalize\"\r\n              fontSize=\"3xl\"\r\n              fontWeight=\"semibold\"\r\n            >\r\n              {post.name}\r\n            </Text>\r\n            <Text fontSize=\"2xl\">{post.text}</Text>\r\n            {/* Like */}\r\n            <ButtonGroup mt={2}>\r\n              <Button\r\n                size=\"sm\"\r\n                leftIcon={<BiUpvote />}\r\n                colorScheme=\"red\"\r\n                variant=\"outline\"\r\n                onClick={() => {\r\n                  dispatch(likePost({ postId: post._id }));\r\n                }}\r\n              >\r\n                {post.likes && post.likes.length}\r\n              </Button>\r\n              <IconButton\r\n                size=\"sm\"\r\n                icon={<BiDownvote />}\r\n                colorScheme=\"purple\"\r\n                variant=\"ghost\"\r\n                aria-label=\"down-vote\"\r\n                onClick={() => {\r\n                  dispatch(unlikePost({ postId: post._id }));\r\n                }}\r\n              ></IconButton>\r\n            </ButtonGroup>\r\n            {/* Comments */}\r\n            <Box mt={4}>\r\n              {post.comments &&\r\n                post.comments.map((comment) => {\r\n                  return (\r\n                    <Box\r\n                      key={comment._id}\r\n                      position=\"relative\"\r\n                      borderTop=\"1px\"\r\n                      borderColor=\"purple.200\"\r\n                    >\r\n                      {userInfo._id === post.user && (\r\n                        <IconButton\r\n                          colorScheme=\"red\"\r\n                          position=\"absolute\"\r\n                          size=\"xs\"\r\n                          top=\"5px\"\r\n                          right=\"5px\"\r\n                          variant=\"ghost\"\r\n                          aria-label=\"delete\"\r\n                          icon={<FaTrash />}\r\n                          onClick={() => {\r\n                            if (window.confirm(\"Bist du sicher?\")) {\r\n                              dispatch(\r\n                                deleteComment({\r\n                                  postId: post._id,\r\n                                  commentId: comment._id\r\n                                })\r\n                              );\r\n                            }\r\n                          }}\r\n                        ></IconButton>\r\n                      )}\r\n                      <Flex>\r\n                        <Text\r\n                          casing=\"capitalize\"\r\n                          fontWeight=\"bold\"\r\n                          color=\"purple.400\"\r\n                        >\r\n                          {comment.name}\r\n                        </Text>\r\n                        <Text ml={4}>{comment.text}</Text>\r\n                      </Flex>\r\n                      <Text fontSize=\"sm\" color=\"purple.300\">\r\n                        <Moment locale=\"de\" to={comment.date}></Moment>\r\n                      </Text>\r\n                    </Box>\r\n                  );\r\n                })}\r\n            </Box>\r\n            {/* Form */}\r\n            <CommentForm postId={post._id} />\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { render } from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n// Redux store\nimport { store } from \"./store\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <Provider store={store}>\n    <Router>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}